
#if you what to call this github workflow script on a push request
#you have to format your commit message according to this

#git commit -m "[path of the file you what to change] replace [the word you want to change] [the new word]"
#example: git commit -m "./congif.yml replace goodbye hello"



name: Replace Word in File

on:
  push:
    branches:
      - main

jobs:
  replace-word:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract commit message
        id: extract_message
        run: |
          COMMIT_MSG=$(git log --format=%B -n 1 ${{ github.sha }})
          echo "::set-output name=message::${COMMIT_MSG}"

      - name: Extract information from commit message
        id: extract_info
        run: |
          MESSAGE="${{ steps.extract_message.outputs.message }}"
          # Add your custom logic to parse the commit message and extract information
          # For example:
          FILE=$(echo "$MESSAGE" | awk '{print $1}')  # Assuming the file is the first word in the commit message
          REPLACE=$(echo "$MESSAGE" | awk '{print $2}')  # Assuming the new word is the third word
          OLD_WORD=$(echo "$MESSAGE" | awk '{print $3}')  # Assuming the old word is the second word
          NEW_WORD=$(echo "$MESSAGE" | awk '{print $4}')  # Assuming the new word is the third word

          echo "::set-output name=file::$FILE"
          echo "::set-output name=old_word::$OLD_WORD"
          echo "::set-output name=new_word::$NEW_WORD"
          echo "::set-output name=replace::$REPLACE"

      - name: Replace words in file
        if: ${{ steps.extract_info.outputs.replace == 'replace' }}
        run: |
          FILE_PATH="${{ steps.extract_info.outputs.file }}"
          OLD_WORD=${{ steps.extract_info.outputs.old_word }}
          NEW_WORD=${{ steps.extract_info.outputs.new_word }}

          sed -i "s/OLD_WORD/NEW_WORD/g" FILE_PATH


          git config --global user.email "fogadm06@gmail.com"
          git config --global user.name "FogadOg"
          
          git add .
          git commit -m "Replace words in $FILE_PATH"
          git push

        env:
          FILE_PATH: ${{ steps.extract_info.outputs.file }}