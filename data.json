[{"lastTimeCrawled":"2024-01-06T12:15:06.351102800","images":[{"src":"https://donate.wikimedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://donate.wikimedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://donate.wikimedia.org/static/favicon/wmf.ico","pageTitle":"Make your donation now - Wikimedia Foundation","rating":0,"pageId":"99fd40f6-07de-4c83-921b-30f3a33fcaab","url":"https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en","pageName":"wikimedia.org","content":["Thank you for considering a donation to the Wikimedia Foundation, the nonprofit that hosts Wikipedia and other crucial free knowledge projects.","We invite you to reflect on the number of times you visited Wikipedia in the past year. If the knowledge you gained here was valuable, please join the 2% of readers who donate to the nonprofit that supports Wikipedia.","It is hard to know what to trust online these days. Wikipedia is different: not perfect, but also not here to make a profit or to push a particular perspective. It is written by everyone, together, because they want to help create a free repository of high-quality information.","If Wikipedia has given you useful knowledge this year, please give back. There are no small contributions: every edit counts, every donation counts.","Thank you.","Technology: Servers, bandwidth, maintenance, development. Wikipedia is one of the top 10 websites in the world, and it runs on a fraction of what other top websites spend.","People and Projects: The other top websites have thousands of employees. Wikimedia Foundation has about 700 staff and contractors to support a wide variety of projects, making your donation a great investment in a highly-efficient not-for-profit organization.","Tax deductibility information","We do not sell or trade your information to anyone. By donating, you agree to share your personal information with the Wikimedia Foundation, the nonprofit organization that hosts Wikipedia and other Wikimedia projects, and its service providers pursuant to our donor policy. Wikimedia Foundation and its service providers are located in the United States and in other countries whose privacy laws may not be equivalent to your own. For more information please read our donor policy.","For recurring donors, fixed monthly payments will be debited by the Wikimedia Foundation on the monthly anniversary of the first donation, until such time as you notify us to discontinue them. Donations initiated on the 29, 30, or 31 of the month will recur on the last day of the month for shorter months, as close to the original date as possible. For questions, please contact donate@wikimedia.org.","Monthly support is the best way to ensure that Wikipedia keeps thriving.","/* === Template:Styles/Default.css === */\n\n*,\n*:before,\n*:after {\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n}\n\n/* Hide these until the required JavaScript fiddling has been done */\n#actual-form,\n.consider-amounts {\n    display: none;\n}\n\n#actual-form-loading {\n    text-align: center;\n    line-height: 1.2;\n}\n\n.error-nojs {\n    max-width: 300px;\n    color: #d33;\n}\n\n/* Hide default MediaWiki stuff we don't want */\n\n#mw-page-base, #mw-head-base,\n#mw-panel .portal,\n#mw-head, #catlinks,\n#firstHeading, #contentSub, #contentSub2, #siteSub,\n#jump-to-nav, .uls-tipsy {\n    display: none;\n}\n\n/* Re-add gradient background */\nbody {\n    background-image: linear-gradient(to bottom, #fff 40px, #f6f6f6 80px);\n    background-position: top;\n    background-repeat: repeat-x;\n    background-color: #f6f6f6;\n}\n\n#content {\n    background-color: transparent;\n    background-image: none;\n    border: 0;\n    padding-top: 32px;\n}\n\n/* Link colors for visibility */\n.mw-parser-output a,\n.mw-parser-output a.external,\n.mw-parser-output a.extiw {\n    color: #36c;\n}\n\n.mw-parser-output a:visited,\n.mw-parser-output a.external:visited,\n.mw-parser-output a.extiw:visited {\n    color: #6f4db3;\n}\n\n.lp-error {\n    color: #d33;\n    font-weight: 500;\n    font-size: 14px;\n}\n\n.amount-options .lp-error {\n    margin: 0 4px;\n}\n\n/* Prevent site logos from showing through modals (e.g. for monthly convert) */\n.vector-body {\n    position: inherit;\n}\n\nbody.modal-open {\n    overflow: hidden;\n    position: fixed;\n}\n\n/* --- Overall layout of the landing page --- */\n\n#main-wrapper {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 24px;\n}\n\nbody.rtl #main-wrapper {\n    direction: rtl;\n}\n\n#form-wrapper {\n    width: 380px;\n    background-color: #fff;\n    border: 1px solid #a2a9b1;\n    border-radius: 2px;\n    padding: 24px;\n    color: #222;\n}\n\n#appeal-wrapper {\n    flex: 1 0 0;\n}\n\n/* --- Appeal --- */\n\n#appeal {\n    font-size: 16px;\n}\n\n#appeal h2,\n#appeal-head {\n    font-size: 21px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid #a2a9b1;\n    margin-bottom: 21px;\n}\n\n.quote-wrapper {\n    padding: 140px 0;\n}\n\n/* --- Hide non-monthly capable payment methods on monthly forms --- */\n\n.form-monthly .not-monthly-capable {\n    display: none;\n}\n\n/* --- Form --- */\n\n#donate-form-wrapper fieldset {\n    width: 100%;\n    border: 0;\n    margin: 0 0 8px 0;\n    padding: 0;\n}\n\n.frequency-options ul,\n.amount-options ul {\n    display: flex;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n\n.frequency-options ul li,\n.amount-options ul li {\n    flex: 1 0 0;\n    padding: 4px;\n}\n\n/* --- Subheaders --- */\n\n#radiobuttons-table-header,\n#paymenttype-table-header {\n    display: block;\n    margin-bottom: 6px;\n    text-align: center;\n    font-weight: bold;\n}\n\n/* --- Commmon button styles --- */\n\n.frequency-options input[type=\"radio\"],\n.amount-options input[type=\"radio\"] {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    padding: 0;\n    overflow: hidden;\n    border: 0;\n    clip: rect(0 0 0 0);\n}\n\n.frb-btn,\n.payment-method-button {\n    display: flex;\n    justify-content: center;\n    align-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    height: 50px;\n    padding: 0 4px;\n    border-radius: 2px;\n    font-family: inherit;\n    font-weight: 500;\n    cursor: pointer;\n    transition: background-color 100ms, color 100ms, border-color 100ms, box-shadow 100ms;\n    background-color: #f8f9fa;\n    color: #222;\n    border: 1px solid #a2a9b1;\n}\n\n.frb-btn:hover {\n    background-color: #fff;\n    color: #444;\n    border-color: #a2a9b1;\n}\n\n.frb-btn:active {\n    background-color: #c8ccd1;\n    color: #000;\n    border-color: #72777d;\n    box-shadow: none;\n}\n\ninput[type=\"radio\"]:checked + .frb-btn {\n    background-color: #2a4b8d;\n    color: #fff;\n    border-color: #2a4b8d;\n}\n\n.frb-btn:focus,\n.payment-method-button:focus {\n    outline: 0;\n    border-color: #36c;\n    box-shadow: inset 0 0 0 1px #36c;\n}\n\ninput[type=\"radio\"]:focus + .frb-btn,\ninput[type=\"radio\"]:checked + .frb-btn:focus {\n    box-shadow: inset 0 0 0 1px #36c, inset 0 0 0 2px #fff;\n}\n\n.payment-method-button {\n    color: #36c;\n}\n\n.payment-method-button:hover {\n    background-color: #fff;\n    border-color: #447ff5;\n}\n\n.payment-method-button:active {\n    background-color: #eff3fa;\n    color: #2a4b8d;\n    border-color: #2a4b8d;\n    box-shadow: none;\n}\n\n/* --- Donation Amounts --- */\n\n.amount-options .frb-btn {\n    height: 60px;\n    font-size: 15px;\n    line-height: 1.2;\n    text-align: center;\n}\n\n/* Smaller font size for countries with v long amounts */\n.country-CO .amount-options .frb-btn,\n.country-CR .amount-options .frb-btn,\n.country-KR .amount-options .frb-btn,\n.country-PY .amount-options .frb-btn,\n.country-VN .amount-options .frb-btn {\n    font-size: 13px;\n}\n\n.input_amount_other .frb-btn span {\n    display: block;\n    font-size: 12px;\n    line-height: 1;\n    margin-bottom: 2px;\n    white-space: normal;\n    text-align: center;\n}\n\n.input_amount_other input {\n    display: block;\n    width: 100%;\n    border: 1px solid #a2a9b1;\n    color: #222;\n    padding: 2px;\n    border-radius: 2px;\n    direction: ltr;\n    text-align: center;\n    font-family: inherit;\n    font-size: 16px; /* must be >=16px or mobile Safari zooms in when selected */\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    margin: 0 4px;\n}\n\n/* --- Opt-in and PTF input styles --- */\n\n.lp-radio-wrapper,\n.lp-checkbox-wrapper {\n    display: table;\n}\n\n.lp-radio,\n.lp-checkbox {\n    display: table-cell;\n    vertical-align: top;\n    margin: 7px 8px 8px 2px;\n    cursor: pointer;\n}\n\nbody.rtl .lp-radio,\nbody.rtl .lp-checkbox {\n    margin: 7px 2px 8px 8px;\n}\n\n.lp-radio-label,\n.lp-checkbox-label {\n    display: table-cell;\n    vertical-align: top;\n    padding: 4px 0;\n    white-space: normal;\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: normal;\n    cursor: pointer;\n}\n\n.lp-radio-label:hover,\n.lp-radio:focus + .lp-radio-label,\n.lp-radio:hover + .lp-radio-label,\n.lp-checkbox-label:hover,\n.lp-checkbox:focus + .lp-checkbox-label,\n.lp-checkbox:hover + .lp-checkbox-label {\n    color: #36c;\n    text-decoration: none;\n}\n\n/* --- Opt-in --- */\n\n.optin-options {\n    padding: 0 4px !important;\n}\n\n.optin-options legend {\n    padding: 0;\n    font-size: inherit;\n    font-weight: bold;\n}\n\n.optin-options ul {\n    list-style: none;\n    margin: 0;\n}\n\n.optin-options li {\n    display: table;\n}\n\n.optin-smallprint {\n    clear: both;\n    font-size: 12px;\n    line-height: 14px;\n    margin-top: 8px;\n}\n\n.optin-no-prompt {\n    display: none;\n    margin: 0;\n    padding: 6px;\n    border: 2px solid #900;\n    border-radius: 2px;\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: normal;\n}\n\n.optin-no-prompt.is-positive {\n    border-color: #14866d;\n    font-weight: bold;\n}\n\n.optin-no-prompt__yes { display: none; }\n.optin-no-prompt__no  { display: block; }\n\n.optin-no-prompt.is-positive .optin-no-prompt__yes { display: block; }\n.optin-no-prompt.is-positive .optin-no-prompt__no  { display: none; }\n\n/* --- PTF --- */\n.ptf {\n    display: none;\n    padding: 0 4px;\n}\n\n/* --- Payment method buttons --- */\n\n.payment-method-div {\n    padding: 4px 4px;\n}\n\n/* Hide extra empty <p> tags between buttons */\n.payment-method-div ~ p {\n    display: none;\n}\n\n.payment-method-button {\n    margin: 0;\n    width: 100%;\n    font-size: 15px;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    overflow: hidden;\n}\n\n/* --- Infobox (\"Where your donation goes\") --- */\n\n#infobox-wrapper {\n    font-size: 13px;\n    line-height: 1.4;\n    color: #54595d;\n    font-weight: normal;\n    padding: 8px 4px 0 4px;\n}\n\n#infobox-wrapper h2 {\n    font-size: 16px;\n    font-weight: bold;\n    color: inherit;\n    border: 0;\n    margin-bottom: 8px;\n}\n\n/* --- Privacy and links --- */\n\n#donate-footer {\n    width: 100%;\n    text-align: center;\n    line-height: 1.4;\n    padding: 24px 15% 8px;\n}\n\n#donate-footer > div {\n    margin-bottom: 16px;\n}\n\n.donate-smallprint,\n#donor-policy-block {\n    font-size: 12px;\n}\n\n.form-info-links,\n.form-info-links ul {\n    list-style: none;\n    margin: 0;\n    text-align: center;\n}\n\n.form-info-links li {\n    display: inline-block;\n}\n\n.form-info-links a.external {\n    padding: 14px !important;\n}\n\n/* --- Footer --- */\n\n.mw-footer {\n    display: none;\n}\n\n.payment-method-button svg {\n    margin: 0 4px;\n}\n\n/* Credit card logos.\n * Classes are added by https://donate.wikimedia.org/wiki/MediaWiki:DonationForm.js ---\n */\n.paymentmethod-cc svg {\n    display: none;\n    height: 26px;\n    border: 1px solid #c8ccd1;\n    border-radius: 4px;\n}\n\n.cctypes-vmad,\n.cctypes-vmaj,\n.cctypes-vmj,\n.cctypes-vma,\n.cctypes-vm,\n.cctypes-CBvma,\n.cctypes-vmar {\n    font-size: 0; /* Remove spacing between icons */\n}\n\n.cctypes-vmad  .cc-logo-visa,\n.cctypes-vmad  .cc-logo-mastercard,\n.cctypes-vmad  .cc-logo-amex,\n.cctypes-vmad  .cc-logo-discover,\n\n.cctypes-vmaj  .cc-logo-visa,\n.cctypes-vmaj  .cc-logo-mastercard,\n.cctypes-vmaj  .cc-logo-amex,\n.cctypes-vmaj  .cc-logo-jcb,\n\n.cctypes-vmj   .cc-logo-visa,\n.cctypes-vmj   .cc-logo-mastercard,\n.cctypes-vmj   .cc-logo-jcb,\n\n.cctypes-vma   .cc-logo-visa,\n.cctypes-vma   .cc-logo-mastercard,\n.cctypes-vma   .cc-logo-amex,\n\n.cctypes-vm    .cc-logo-visa,\n.cctypes-vm    .cc-logo-mastercard,\n\n.cctypes-CBvma .cc-logo-CB,\n.cctypes-CBvma .cc-logo-visa,\n.cctypes-CBvma .cc-logo-mastercard,\n.cctypes-CBvma .cc-logo-amex,\n\n.cctypes-vmar .cc-logo-visa,\n.cctypes-vmar .cc-logo-mastercard,\n.cctypes-vmar .cc-logo-amex,\n.cctypes-vmar .cc-logo-rupay {\n    display: inline-block !important;\n}\n\n.paymentmethod-cc .cc-logo-rupay {\n    border: 0;\n}\n\n/* Logos - WP on top, WMF horizontal below */\n#p-logo a {\n    /* Need explicit height for backgrounds for IE */\n    background: top 30% center/160px 24px url(https://donate.wikimedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg), top 70% center/160px 37px url(https://upload.wikimedia.org/wikipedia/donate/6/60/Wmf_logo_horiz_K.svg);\n    background-repeat: no-repeat;\n    margin-left: 8px;\n}\n\n/* Mobile styles */\n@media (max-width: 981px) {\n    \n    /* Text &amp; Logo layout */\n    #content {\n        margin: 0;\n        padding: 140px 24px 24px 24px;\n    }\n\n    #mw-panel, #p-logo, #p-logo a {\n        width: 100% !important;\n        height: 140px;\n        margin: 0;\n    }\n\n    #p-logo a {\n        margin-left: 0;\n    }\n\n    /* Hide appeal */\n    #appeal-wrapper {\n        display: none;\n    }\n\n    #form-wrapper {\n        padding: 16px;\n    }\n\n    /* Smallprint and links */\n    #donate-footer {\n        margin: 24px 0 0 0;\n        padding: 0;\n    }\n\n    /* Footer */\n    div#footer {\n        margin: 0;\n    }\n}\n\n@media (max-width: 721px) {\n    /* Stack appeal and form */\n    #appeal-wrapper {\n        flex-basis: 100%;\n        padding: 0;\n    }\n}\n\n@media (max-width: 501px) {\n    /* Appeal same width as form */\n    #appeal-wrapper {\n        max-width: 380px;\n        padding: 0;\n    }\n\n    #content {\n        padding: 140px 8px 8px 8px;\n    }\n\n}\n\n/* === end of Template:Styles/Default.css === */"]},{"lastTimeCrawled":"2024-01-06T12:15:07.372752900","images":[{"src":"https://af.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://af.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg","alt":"Wikipedia"},{"src":"https://af.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-af.svg","alt":""},{"src":"https://af.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://af.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://af.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Datastruktuur - Wikipedia","rating":0,"pageId":"f98db2fb-2ada-487d-a0b4-2b57a39d57a0","pageName":"wikipedia.org","url":"https://af.wikipedia.org/wiki/Datastruktuur","content":["In rekenaarwetenskap is 'n datastruktuur 'n formaat vir die organisering, bestuur en stoor van data wat effektiewe toegang en wysiging moontlik maak.[1][2][3][4][5] Meer konkreet is 'n datastruktuur 'n versameling datawaardes, die verhoudings tussen hulle, en die funksies of bewerkings wat toegepas kan word op die data.[6]","Datastrukture dien as die basis vir abstrakte datatipes (ADT). \"Die ADT definieer die logiese vorm van die datatipe. Die datastruktuur implementeer die fisiese vorm van die datatipe.\"[7]","Verskillende tipe datastrukture is geskik vir verskillende toepassings, en party is hoogs gespesialiseerd vir spesifieke take. So byvoorbeeld gebruik relasionele databasisse tipies B-boomindekse vir dataherwinning,[8] terwyl programvertalers gewoonlik hutstabelle gebruik om identifiseerders op te soek.[9]","Datastrukture verskaf 'n manier om groot hoeveelhede data doeltreffend te bestuur vir gebruike soos groot databasisse en internetindekseringsdienste. Doeltreffende datastrukture is gewoonlik die sleutel tot die ontwerp van doeltreffende algoritmes. Sommige formele ontwerpsmetodes en programmeertale beklemtoon datastrukture eerder as algoritmes as die sleutelfaktor vir organisering by sagtewareontwerp. Datastrukture kan gebruik word vir die stoor en herwinning van inligting wat in beide die hoofgeheue en sekondêre geheue gestoor word.[10]","Datastrukture word oor die algemeen gebaseer op die vermoë van 'n rekenaar om data op enige plek in sy geheue te kry en te stoor. Dié toegang geskied deur 'n wyser\u2014'n bisstring wat 'n geheueadres voorstel, wat ook in die geheue gestoor kan word en deur die program gemanipuleer kan word. So bv. is die datastrukture skikking en rekord gebaseer op die berekening van data-items se adresse met wiskundige bewerkings, terwyl geskakelde datastrukture gebaseer is op die direkte stoor van data-items se adresse in die struktuur. Heelwat datastrukture gebruik altwee beginsels, soms gekombineer op nietriviale maniere (soos by XOR-skakeling).","Die implementering van 'n datastruktuur vereis tipies die skryf van 'n stel prosedures wat instansiërings van die datastruktuur skep en manipuleer. Die doeltreffendheid van 'n datastruktuur kan nie afsonderlik van hierdie bewerkings ontleed word nie. Hierdie waarneming motiveer die teoretiese konsep van 'n abstrakte datatipe, 'n datastruktuur wat indirek gedefinieer word deur die bewerkings wat uitgevoer word daarop, en deur die wiskundige eienskappe van daardie bewerkings (insluitend hul koste in ruimte en tyd).","Daar is verskeie tipe datastrukture, meestal gebou op eenvoudiger primitiewe datatipes:[11]","Verder is grafieke en binêre bome ander datastrukture wat algemeen gebruik word."]},{"lastTimeCrawled":"2024-01-06T12:15:10.114157200","images":[{"src":"https://ar.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://ar.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-ar.svg","alt":"ويكيبيديا"},{"src":"https://ar.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-ar.svg","alt":""},{"src":"https://ar.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://ar.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://ar.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"بنية بيانات - ويكيبيديا","rating":0,"pageId":"a96ff50f-928c-4d29-81d1-e958f994c79e","pageName":"wikipedia.org","url":"https://ar.wikipedia.org/wiki/%D8%A8%D9%86%D9%8A%D8%A9_%D8%A8%D9%8A%D8%A7%D9%86%D8%A7%D8%AA","content":["تعديل - تعديل مصدري - تعديل ويكي بيانات","في علوم الحاسوب، هياكل البيانات[1] هو تنسيق تنظيم وإدارة وتخزين البيانات التي تتيح الوصول والتعديل الفعال.[2][3][4] بتعبير أدق، هيكل البيانات عبارة عن مجموعة من قيم البيانات، والعلاقات فيما بينها، والوظائف أو العمليات التي يمكن تطبيقها على البيانات،[5] أي أنها بنية جبرية حول البيانات.","تعمل هياكل البيانات كأساس لأنواع البيانات المجردة (ADT). تحدد ADT الشكل المنطقي لنوع البيانات. تنفذ بنية البيانات الشكل المادي لنوع البيانات.[6]","تتناسب أنواع مختلفة من هياكل البيانات مع أنواع مختلفة من التطبيقات ، وبعضها شديد التخصص لمهام محددة. على سبيل المثال ، عادةً ما تستخدم قواعد البيانات العلائقية فهارس بي - تري لاسترداد البيانات،[7] بينما تستخدم تطبيقات المجمّع عادةً جداول التجزئة للبحث عن المعرّفات.[8]","توفر هياكل البيانات وسيلة لإدارة كميات كبيرة من البيانات بكفاءة لاستخدامات مثل قواعد البيانات الكبيرة وخدمات فهرسة الإنترنت. عادةً ما تكون هياكل البيانات الفعالة هي المفتاح لتصميم خوارزميات فعالة. تؤكد بعض طرق التصميم الرسمية ولغات البرمجة على هياكل البيانات ، بدلاً من الخوارزميات ، كعامل تنظيم رئيسي في تصميم البرامج. يمكن استخدام هياكل البيانات لتنظيم تخزين واسترجاع المعلومات المخزنة في كل من الذاكرة الرئيسية والذاكرة الثانوية.[9]","تعتمد هياكل البيانات بشكل عام على قدرة الحاسوب على جلب البيانات وتخزينها في أي مكان في ذاكرته، محددًا بمؤشر - سلسلة بت، تمثل عنوان الذاكرة، يمكن تخزينها في الذاكرة ومعالجتها بواسطة البرنامج. وبالتالي، تستند هياكل بيانات المصفوفة والتسجيل إلى حساب عناوين عناصر البيانات بالعمليات الحسابية، بينما تعتمد هياكل البيانات المرتبطة على تخزين عناوين عناصر البيانات داخل الهيكل نفسه.","يتطلب تنفيذ بنية البيانات عادةً كتابة مجموعة من الإجراءات التي تنشئ وتتعامل مع مثيلات ذلك الهيكل. لا يمكن تحليل كفاءة بنية البيانات بشكل منفصل عن تلك العمليات. تحفز هذه الملاحظة المفهوم النظري لنوع البيانات المجردة، وهيكل البيانات الذي يتم تحديده بشكل غير مباشر من خلال العمليات التي يمكن إجراؤها عليه، والخصائص الرياضية لتلك العمليات (بما في ذلك تكلفة المكان والزمان).","هناك أنواع عديدة من هياكل البيانات، مبنية بشكل عام على أنواع بينات أولية أبسط:","بالإضافة إلى ذلك، تعد الرسوم البيانية والأشجار الثنائية هياكل بيانات أخرى شائعة الاستخدام.","تفتقر معظم لغات التجميع وبعض اللغات منخفضة المستوى، مثل BCPL (Basic Combined Programming Language)، إلى الدعم المدمج لهياكل البيانات. من ناحية أخرى، فإن العديد من لغات البرمجة عالية المستوى وبعض لغات التجميع عالية المستوى، مثل MASM، لها بناء جملة خاص أو دعم آخر مدمج لهياكل بيانات معينة، مثل السجلات والمصفوفات. على سبيل المثال، تدعم لغات C (سليل مباشر لـ BCPL) وباسكال البنيات والسجلات، على التوالي، بالإضافة إلى المتجهات (المصفوفات أحادية البعد) والمصفوفات متعددة الأبعاد.","تتميز معظم لغات البرمجة بنوع من آلية المكتبة التي تسمح بإعادة استخدام تطبيقات بنية البيانات بواسطة برامج مختلفة. تأتي اللغات الحديثة عادةً مع مكتبات قياسية تقوم بتنفيذ هياكل البيانات الأكثر شيوعًا. الأمثلة هي مكتبة القوالب المعيارية C ++، وإطار عمل مجموعات Java، ومايكروسوفت .NET Framework.","تدعم اللغات الحديثة بشكل عام البرمجة التركيبية، والفصل بين واجهة وحدة المكتبة وتنفيذها. يوفر البعض أنواع بيانات غير شفافة تسمح للعملاء بإخفاء تفاصيل التنفيذ. عادةً ما تستخدم لغات البرمجة الموجهة للكائنات، مثل C ++ وJava وSmalltalk، فئات لهذا الغرض.","العديد من هياكل البيانات المعروفة لها إصدارات متزامنة تسمح لخيوط حوسبة متعددة بالوصول إلى مثيل واحد ملموس لهيكل البيانات في وقت واحد.","ان هياكل البيانات تستند عموما على قدرة الكمبيوتر على جلب وتخزين البيانات في أي مكان في الذاكرة، وتحدد بواسطة عنوان - سلسلة بت من المكن هي نفسها تخزين في الذاكرة وتعالج بواسطة البرنامج. وهكذا فإن السجل ومصفوفة هياكل البيانات تقوم على حساب عناوين البيانات بواسطة العمليات الحسابية، في حين تستند هياكل البيانات المرتبطة على عناوين تخزين عناصر البيانات داخل الهيكل نفسه. العديد من هياكل البيانات تستخدم كلا المبدئين جنبا إلى جنب، وفي بعض الأحيان تجمع بطرق غير تافهة (كما في ربط اكس اور (XOR linking))."]},{"lastTimeCrawled":"2024-01-06T12:15:10.848326100","images":[{"src":"https://ast.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://ast.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg","alt":"Wikipedia"},{"src":"https://ast.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-ast.svg","alt":"La Enciclopedia Llibre"},{"src":"https://ast.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://ast.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://ast.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Estructura de datos - Wikipedia","rating":0,"pageId":"672b72c1-58b2-4ad5-8d61-9c2e5a81970b","pageName":"wikipedia.org","url":"https://ast.wikipedia.org/wiki/Estructura_de_datos","content":["Una estructura de datos ye una mena d'organizar l'atroxu de datos na memoria d'un ordenador, pa que esos datos puedan emplegase eficientemente.","Qué ye o non \"eficiente\" depende de pa qué se vayan a emplegar. Dalgunes vegaes, al escoyer l'algoritmu que vaya a trabayar colos datos ya ta claro qué estructura de datos hai qu' usar; otres ye al revés, y al escoyer les estructures queden determinaos los algoritmos. En xeneral lo que se quier ye que l' algoritmu necesite el menos tiempu posible pa facer la so xera, o bien que los datos ocupen el menos sitiu posible na memoria del ordenador. Lo meyor sería siempres que se dieren les dos coses: gastar cuanta menos memoria meyor, y cuanto menos tiempu meyor. Pero de cutio nun se pue facer un algoritmu óptimu pa les dos coses al tiempu; si se gasta menos memoria, tardará más, y viceversa. Por eso, al facer un programa ye perimportante escoyer y diseñar les estructures de datos que va usar. Esa decisión pue facer, por exemplu, que'l mesmu programa tarde (pa facer una xera determinada) segundos o díes, namái con camudar les sos estructures de datos.","Nun principiu, los protagonistas de los programas yeren los algoritmos, el fluxu d'execución. Pero bien ceo salieron llinguaxes de programación nos que los protagonistes yeren les estructures de datos, y qu' ufiertaben una sintaxis afayadiza pa describiles y manexales. Primero foron llinguaxes modulares, y dempués llinguaxes empobinaos a oxetos, comu C++ o Java.","Hai munches estructures de datos, con carauterístiques estremaes. Nes lliniales los datos formen una secuencia; son exemplos les llistes, piles o coles. Nes estructures non lliniales cada datu pue tener más de un predecesor o socesor; eso pasa nos árboles o nos grafos. Un de los autores más conocíos na estaya de les estructures de datos y los algoritmos ye Niklaus Wirth, premiu A. M. Turing en 1984."]},{"lastTimeCrawled":"2024-01-06T12:15:12.886148300","images":[{"src":"https://bn.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://bn.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-bn.svg","alt":"উইকিপিডিয়া"},{"src":"https://bn.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-bn.svg","alt":"একটি মুক্ত বিশ্বকোষ"},{"src":"https://bn.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://bn.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://bn.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"উপাত্ত সংগঠন - উইকিপিডিয়া","rating":0,"pageId":"83144a2d-1f0c-453a-94e5-7059c704bf0f","pageName":"wikipedia.org","url":"https://bn.wikipedia.org/wiki/%E0%A6%89%E0%A6%AA%E0%A6%BE%E0%A6%A4%E0%A7%8D%E0%A6%A4_%E0%A6%B8%E0%A6%82%E0%A6%97%E0%A6%A0%E0%A6%A8","content":["কম্পিউটার বিজ্ঞানে উপাত্ত সংগঠন ([Data structure, ডেটা স্ট্রাক্\u200cচার] ত্রুটি: {{Lang-xx}}: text has italic markup (সাহায্য)) বলতে উপাত্তকে কম্পিউটারে রাখার একটি নির্দিষ্ট উপায়কে বোঝায় যাতে উপাত্তকে দক্ষতার সাথে ব্যবহার করা যায়। যত্নের সাথে বাছাই করা উপাত্ত সংগঠন উপাত্তের উপর সবচেয়ে দক্ষ অ্যালগোরিদমের ব্যবহার সম্ভব করে তোলে। একটি সুপরিকল্পিত উপাত্ত সংগঠন মেমরি ও সময় যথাসম্ভব বাঁচিয়ে উপাত্তের উপর অনেকগুলি জরুরি অপারেশন প্রয়োগ করার ক্ষমতা দেয়। কোন একটি প্রোগ্রামিং ভাষাতে প্রদত্ত উপাত্ত টাইপ, রেফারেন্স ও অপারেশন অনুসারে উপাত্ত সংগঠনগুলি বাস্তবায়ন করা হয়।","এ্যাপ্লিকেশনের ধরনের উপর ডাটা স্ট্রাকচারের শ্রেণীবিভাগ হয়ে থাকে এবং এদের মধ্যে অনেকগুলো নির্দিষ্ট কিছু কাজের জন্য বিশেষভাবে তৈরি করা হয়। উদাহরণস্বরূপ, বি-ট্রিগুলো ডাটাবেসের ক্ষেত্রে প্রয়োগ করার জন্য বিশেষভাবে উপযুক্ত এবং রুটিং টেবিলগুলো মেশিন নেটওয়ার্কের উপর নির্ভরশীল।","বিভিন্ন ধরনের প্রোগ্রামের ডিজাইনে, ডাটা স্ট্রাকচারের বাছাইকরণ একটি অন্যতম প্রধান বিষয়। বড় ধরনের সিস্টেম তৈরির অভিজ্ঞতা থেকে জানা যায় যে, চূড়ান্ত ফলাফলের মান ও সার্থকতা অনেকাংশে শ্রেষ্ঠ ডাটা স্ট্রাকচার বাছাই করার উপর নির্ভরশীল। ডাটা স্ট্রাকচার বাছাই করার পর, এ্যালগরিদমের ব্যবহার অবশ্যম্ভাবী হয়ে ওঠে। অবশ্য কখনো এর বিপরীত পদ্ধতিও অবলম্বন করা হয় এবং এক্ষেত্রে কোন নির্দিষ্ট এ্যালগরিদমের জন্য উপযুক্ত ডাটা স্ট্রাকচার বাছাই করা হয়। উভয় ক্ষেত্রেই প্রয়োজনীয় ডাটা স্ট্রাকচারের বাছাইকরণ অত্যন্ত জরুরী।","সুসংগঠিত ডিজাইন পদ্ধতি এবং প্রোগ্রামিং ভাষাগুলোর গভীর বিশ্লেষণের মাধ্যমে জানা যায় যে, এ্যালগরিদমের বদলে ডাটা স্ট্রাকচারই হল প্রধান সাংগঠনিক উপকরণ। অনেক প্রোগ্রামিং ভাষা বেশ কিছু মডিউল সিস্টেম ব্যবহার করে যার মাধ্যমে বিভিন্ন এ্যাপ্লিকেশনের জন্য ডাটা স্ট্রাকচারগুলো ব্যবহার করা যায়। এজন্য নিয়ন্ত্রিত ইণ্টারফেসের আড়ালে তাদের সুনির্দিষ্ট প্রয়োগপদ্ধতিগুলো আড়াল করে রাখা হয়। অবজেক্ট-ওরিয়েণ্টড প্রোগ্রামিং ভাষা যেমন সি++ এবং জাভা এই উদ্দেশ্য বিভিন্ন ক্লাস ব্যবহার করে।","ডাটা স্ট্রাকচারের অত্যধিক গুরুত্বের কারণে অনেক প্রোগ্রামিং ভাষার লাইব্রেরিতে এদের অন্তর্ভুক্ত করা হয়। সি++ এর স্ট্যাণ্ডার্ড টেমপ্লেট লাইব্রেরী কণ্টেইনার্স, জাভার কালেকশন্স ফ্রেমওয়ার্ক এবং মাইক্রোসফটের .নেট ফ্রেমওয়ার্কে এই পদ্ধতি অবলম্বন করা হয়।","অ্যারে, স্ট্যাক, কিউ, লিংকড লিস্ট, ট্রি, গ্রাফ, সার্চিং এবং সর্টিং, ইত্যাদি কতগুলি বহুল ব্যবহৃত উপাত্ত সংগঠন। ডাটা স্ট্রাকচার ইম্লিমেণ্টেশন বা ইণ্টারফেসের প্রতিনিধিত্ব করে। একটি ডাটা স্ট্রাকচারকে দু\u2019টি ফাংশনের মাঝে একটি ইণ্টারফেস হিসেবে দেখা যায় বা সংশ্লিষ্ট ডাটা টাইপের মাধ্যমে সাজানো ও সংরক্ষিত তথ্যভাণ্ডার প্রয়োগ করার একটি পদ্ধতি হিসেবে দেখা যায়।","নির্দিষ্ট সংখ্যক, একই ধরনের তথ্য নির্দেশনাকে অ্যারে বলা হয় ৷\nযেমন, কোন বিদ্যালয়ের 200 জন ছাত্রের বয়স, অ্যারে-র মাধ্যমে প্রকাশ করা হল ৷","অন্যান্য ভেরিয়েবলের মতই অ্যারে ঘোষিত হয় ৷","স্ট্যাক হল এমন একটি রৈখিক গঠন যাহার শূধুমাত্র একদিকেই তথ্য যুক্ত করা যায় বা মুছে দেওয়া যায় ৷\nউদাহরণ হিসেবে বলা যায় টেবিলের উপর কিছু সংখ্যক বই (একটি অন্যটির উপর) , যার শুধুমাত্র উপরের বইটি সরান যাবে বা এর উপর অন্য আরেকটি বই রাখা যাবে ৷ স্ট্যাককে ইংরেজিতে বলা হয় LIFO (Last in first out) ডাটা স্ট্রাকচার।","কিউ বাংলা মানে লাইনে দাড়ানো ৷\nকিউ হচ্ছে এমন একটি সরল রৈখিক গঠন যাহার শুধুমাত্র পশ্চাদ্ভাগে তথ্য যুক্ত এবং সম্মুখভাগ থেকে মুছে ফেলা যায় ৷\nএই দুই প্রান্তকে যথাক্রমে \"REAR\" & \"FRONT\" বলা হয় ৷ কিউকে ইংরেজিতে বলা হয় FIFO ( First in first out) ডাটা স্ট্রাকচার।","লিংকড লিষ্ট বাংলা মানে সংযুক্ত তালিকা।","কম্পিউটার বিজ্ঞানে, ট্রি একটি বহুল ব্যবহৃত ডাটা স্ট্রাকচার যা উপাদান গুলোর মধ্যে ক্রম অনুযায়ী সম্পর্ক নির্দেশ করার জন্য ব্যবহার করা হয় । এর একটি রুট মান এবং এর সঙ্গে সম্পর্কযুক্ত প্যারেন্ট (পিতা) নোডের সাথে সাবট্রি হিসেবে চাইল্ড (শিশু) নোডের একটি সেট সংযুক্ত থাকে ।","ট্রি একটি  অরৈখিক ডাটা স্ট্রাকচার যা নোড ও প্রান্ত দ্বারা গঠিত এবং এটি কোনো বৃত্তাকার চক্র গঠন করে না।  ট্রির সঙ্গে কোন নোড না থাকলে তাকে বলা হয় নাল বা খালি ট্রি। ","রুট  \n  প্যারেন্ট  \n  চাইল্ড  \n  পূর্বপুরুষ  \n  উত্তরাধিকারী  \n  প্যারেন্ট  \n  ট্রির উচ্চতা  \n  নোডের উচ্চতা  \n  লিফ  \n  লেভেল  \n  গভীরতা  \n  ফরেস্ট"]},{"lastTimeCrawled":"2024-01-06T12:15:13.400509400","images":[{"src":"https://zh-min-nan.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://zh-min-nan.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg","alt":"Wikipedia"},{"src":"https://zh-min-nan.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-zh_min_nan.svg","alt":"Chū-iû ê Pek-kho-choân-su"},{"src":"https://zh-min-nan.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://zh-min-nan.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://zh-min-nan.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Chu-liāu kò͘-chō \u2013 Wikipedia","rating":0,"pageId":"476e750a-ad36-4049-9120-54ddfd2a43c5","pageName":"wikipedia.org","url":"https://zh-min-nan.wikipedia.org/wiki/Chu-li%C4%81u_k%C3%B2%CD%98-ch%C5%8D","content":["Chu-liāu kò͘-chō (Eng-gí: data structure) sī chí tī tiān-náu lāi cho͘-chit data ê te̍k tēng hong-hoat."]},{"lastTimeCrawled":"2024-01-06T12:15:14.326575","images":[{"src":"https://be.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://be.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-be.svg","alt":"Вікіпедыя"},{"src":"https://be.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-be.svg","alt":""},{"src":"https://be.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://be.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://be.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Структура даных \u2014 Вікіпедыя","rating":0,"pageId":"02a318b0-4cd7-47d6-bfed-574161769217","pageName":"wikipedia.org","url":"https://be.wikipedia.org/wiki/%D0%A1%D1%82%D1%80%D1%83%D0%BA%D1%82%D1%83%D1%80%D0%B0_%D0%B4%D0%B0%D0%BD%D1%8B%D1%85","content":["Структу́ра да́ных, агульная ўласцівасць інфармацыйнага аб'екта, з якім узаемадзейнічае пэўная праграма.","Гэтая ўласцівасць характарызуецца:","Любую структуру на абстрактным (матэматычным) узроўні можна вызначыць у выглядзе","(D,R), дзе","D \u2014 канечнае мноства элементаў, якія могуць быць тыпамі даных (найпрасцейшы выпадак структуры) ці структурамі даных,","R \u2014 мноства сувязяў паміж элементамі структуры, якое вызначае розныя тыпы структур даных на абстрактным узроўні.","Структуры даных выконваюць функцыю блокаў, з якіх складаюцца праграмы.","і інш.","Біт \u2022\nНібл \u2022\nБайт \u2022\nКубіт \u2022\nТрыт \u2022\nТрайт \u2022\nСлова","Цэлы \u2022\nЗ фіксаванай коскай \u2022\nЗ плаваючай коскай \u2022\nРацыянальны \u2022\nКомплексны \u2022\nДоўгі \u2022\nІнтэрвальны","Сімвальны \u2022\nРадковы","Адрас \u2022\nСпасылка \u2022\nСпасылка ў С++ \u2022\nУказальнік","Алгебраічны тып даных\n(Абагульнены) \u2022\nМасіў \u2022\nАсацыятыўны масіў \u2022\nКлас \u2022\nСпіс \u2022\nКартэж \u2022\nАб\u2019ект \u2022\nСтруктура \u2022\nМноства \u2022\nАб\u2019яднанне (пазначанае)","Лагічны \u2022\nНіжэйшы \u2022\nВышэйшы \u2022\nПералічальны \u2022\nКалекцыя \u2022\nВыключэнне \u2022\nФункцыянальны \u2022\nРод (Метакласс) \u2022\nМанада \u2022\nСемафор \u2022\nСтрумень \u2022\nVoid","Абстрактны тып даных \u2022\nПрымітыўны тып \u2022\nСтруктура даных \u2022\nGeneric \u2022\nЗменная тыпа \u2022\nІнтэрфейс \u2022\nКанструктар даных \u2022\nКанструктар тыпаў \u2022\nКанверсія тыпа \u2022\nСістэма тыпаў"]},{"lastTimeCrawled":"2024-01-06T12:15:15.599266600","images":[{"src":"https://bg.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://bg.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-bg.svg","alt":"Уикипедия"},{"src":"https://bg.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-bg.svg","alt":"Свободната енциклопедия"},{"src":"https://bg.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://bg.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://bg.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Структура от данни \u2013 Уикипедия","rating":0,"pageId":"24457d55-de82-4d72-bce8-dab5619bab99","pageName":"wikipedia.org","url":"https://bg.wikipedia.org/wiki/%D0%A1%D1%82%D1%80%D1%83%D0%BA%D1%82%D1%83%D1%80%D0%B0_%D0%BE%D1%82_%D0%B4%D0%B0%D0%BD%D0%BD%D0%B8","content":["Структурите от данни са множество от данни, които са организирани на основата на логически и математически закони. Често изборът на правилната структура прави програмата по-ефективна, тъй като се спестява памет и време за изпълнение.[1] Данните биват групирани по определен начин, за да се улесни достъпът до тях и управлението им. За различни задачи са подходящи различни структури. За най-общо групиране може да се използва специфичен идентификатор, както например при речника думите са групирани по начална буква. За по-сложни случаи могат да се създадат много по-сложни структури.[2] При избор на подходяща структура е възможно по-бързо и икономично (с ползване на минимум ресурси) обработване на информацията.[3]","Дефинирането на структури от данни става посредством задаване на общи правила за връзките между данните и възможните операции с тях.","От основните видове са изведени специфични структури за определени задачи (например двоични дървета за реализиране на бази данни).","Линейните структури от данни са списъци, стекове и опашки.","Линейният списък е редица от елементи от един и същи тип. Основни операции, които могат да бъдат извършвани с елементите, са добавяне и премахване.[3]","Дървовидните структури от данни включват различни типове дървета.[3]","Дърветата са мрежови структури от данни, едно от най-важните понятия в теория на графите. Следват три еквивалентни дефиниции на понятието \u201eнеориентирано дърво\u201c:","Ако \n  \n    \n      \n        G\n        =\n        (\n        X\n        ,\n        A\n        )\n      \n    \n    {\\displaystyle G=(X,A)}\n  \n е неориентиран граф с \n  \n    \n      \n        n\n      \n    \n    {\\displaystyle n}\n  \n върха, то всяко дърво, образувано от негови дъги се нарича \u201eпокриващо дърво\u201c, ако включва в себе си всички върхове на графа. Очевидно покриващото дърво има \n  \n    \n      \n        n\n        −\n        1\n      \n    \n    {\\displaystyle n-1}\n  \n ребра.","Ориентирано дърво: ориентиран граф без цикли, в който степента-вход на всеки връх (с изключение на един) е равна на 1, а на отбелязания връх изключение (наречен корен) е 0.","Графи са мрежови структури от данни, съвкупност от множеството Х, елементите на което се наричат върхове и множеството А от наредени двойки върхове, наречени дъги (ребра). Означението е (Х, А).","Масивът е колекция от елементи (стойности или променливи), до които може да се получи достъп директно чрез индекс."]},{"lastTimeCrawled":"2024-01-06T12:15:16.384012900","images":[{"src":"https://bs.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://bs.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg","alt":"Wikipedia"},{"src":"https://bs.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-bs.svg","alt":"Slobodna enciklopedija"},{"src":"https://bs.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://bs.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://bs.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Struktura podataka - Wikipedia","rating":0,"pageId":"0a926ad1-6a40-424e-b000-37d74e091d8b","pageName":"wikipedia.org","url":"https://bs.wikipedia.org/wiki/Struktura_podataka","content":["Struktura podataka (eng. data structure) jeste način na koji se podatak zapisuje u računar. Podatak se može zapisati korištenjem raznim algoritmima.","Nedovršeni članak Struktura podataka koji govori o računarstvu treba dopuniti. Dopunite ga prema pravilima Wikipedije."]},{"lastTimeCrawled":"2024-01-06T12:15:17.062119200","images":[{"src":"https://ca.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://ca.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-ca.svg","alt":"Viquipèdia"},{"src":"https://ca.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-ca.svg","alt":"l'Enciclopèdia Lliure"},{"src":"https://ca.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://ca.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://ca.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Estructura de dades - Viquipèdia, l'enciclopèdia lliure","rating":0,"pageId":"06f3a1e0-d056-4c20-b7b7-f00b1ab7f553","pageName":"wikipedia.org","url":"https://ca.wikipedia.org/wiki/Estructura_de_dades","content":["En programació, una estructura de dades és una forma d'organitzar un conjunt de dades elementals amb l'objectiu de facilitar la seva manipulació. Una dada elemental és la mínima informació que es té en un sistema.","Una estructura de dades defineix l'organització i interrelació d'aquests\ni un conjunt d'operacions que es poden realitzar sobre ells. Les operacions bàsiques són:","Altres operacions que es poden realitzar són:","Cada estructura ofereix avantatges i desavantatges en relació a la simplicitat i eficiència per a la realització de cada operació. D'aquesta forma, l'elecció de l'estructura de dades apropiada per a cada problema depèn de factors com la freqüència i l'ordre que es realitza cada operació sobre les dades."]},{"lastTimeCrawled":"2024-01-06T12:15:19.067428","images":[{"src":"https://cs.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://cs.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-cs.svg","alt":"Wikipedie"},{"src":"https://cs.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-cs.svg","alt":"Wikipedie: Otevřená encyklopedie"},{"src":"https://cs.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://cs.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://cs.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Datová struktura \u2013 Wikipedie","rating":0,"pageId":"0b0548a5-a2c9-45bc-8987-2ff28b93e880","pageName":"wikipedia.org","url":"https://cs.wikipedia.org/wiki/Datov%C3%A1_struktura","content":["V matematické informatice a programování představuje datová struktura konkrétní způsob organizace dat v paměti počítače, který zajišťuje, aby mohla data být používána efektivně.[1][2]\nDatová struktura umožňuje uchovávat a zpracovávat množinu dat stejného typu nebo různorodých, ale logicky souvisejících dat.","Termín \u201edatová struktura\u201c může mít několik příbuzných významů:","Datové struktury mohou implementovat jeden nebo více abstraktních datových typů (ADT). Abstraktní datový typ je abstrakce datové struktury; je určen operacemi, které nad ním mohou být prováděny (kontraktem), a matematickými vlastnostmi těchto operací (včetně jejich paměťové a časové složitosti).","Datová struktura pak je konkrétní implementací kontraktu. Datová struktura poskytuje sadu operací pro vkládání, vyhledávání, aktualizování a mazání dat. Tento soubor operací tvoří rozhraní datové struktury. Efektivitu datové struktury nelze posuzovat odděleně od těchto operací. Ukládání a vyhledávání může být prováděno nad daty uloženými v hlavní paměti nebo v sekundární paměti; podle typu paměti volíme vhodné datové struktury a algoritmy.","Při vývoji softwaru závisí složitost implementace a rychlost práce výsledného programu na správném výběru datových struktur. Pro různé druhy aplikací se hodí různé typy datových struktur. Některé datové struktury jsou úzce specializovány pro určité úkoly. Například databázové systémy obvykle spoléhají na indexy ukládané pomocí B-stromů. Pokročilé datové struktury poskytují prostředky pro efektivní správu velkého množství dat. Efektivní datové struktury jsou klíčem k návrhu efektivních algoritmů. Některé formální konstrukční metody a programovací jazyky zdůrazňují datové struktury (spíše než algoritmy) jako klíčový organizační faktor při návrhu softwaru.","Datové struktury jsou obvykle založeny na schopnosti počítače načítat a ukládat data na jakékoliv místo v paměti, určené ukazatelem, což je bitový řetězec, představující adresu v paměti. Tento ukazatel může být sám uložen v paměti a manipulován programem. Například datové struktury pole a záznam jsou založeny na výpočtu adresy datových položek pomocí aritmetických operací, zatímco spojové seznamy jsou založeny na ukládání adres datových položek v rámci struktury samotné. Mnoho datových struktur používá oba principy, někdy kombinované netriviálním způsobem.","Mnohé klasické datové struktury jsou obsaženy buď ve standardních knihovnách programovacích jazyků nebo vestavěny přímo v programovacích jazycích. Například datová struktura hašovací tabulka je vestavěna do většiny skriptovacích jazyků.","Kritéria pro návrh datových struktur:","Abstraktní datové typy zásobník a fronta můžeme implementovat spojovým seznamem. Je sice možné spojový seznam (záznamů spojujících klíč a hodnotu) použít i pro abstraktní datový typ asociativní pole, ale výsledek bude pro větší počet prvků málo efektivní. Pro realizaci asociativního pole si tedy spíše vybereme hašovací tabulku nebo některý typ binárního stromu. Pokud si můžeme dovolit předem omezit množinu klíčů, nebo pokud realizujeme asociativní pole, ve kterém se často hledá a méně často se do něj zapisuje, můžeme využít dokonalé hašování.","V tomto článku byly použity překlady textů z článků Data structure na anglické Wikipedii a Структура данных na ruské Wikipedii."]},{"lastTimeCrawled":"2024-01-06T12:15:19.702546700","images":[{"src":"https://da.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://da.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg","alt":"Wikipedia"},{"src":"https://da.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-da.svg","alt":"Den frie encyklopædi"},{"src":"https://da.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://da.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://da.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Datastruktur - Wikipedia, den frie encyklopædi","rating":0,"pageId":"42696509-5eba-4aa3-8f68-d463e81cd0cc","pageName":"wikipedia.org","url":"https://da.wikipedia.org/wiki/Datastruktur","content":["Datastrukturer er en fællesbetegnelse for data, der er organiserede i elementer, som kan tilføjes eller fjernes fra strukturen. Nogle datastrukturer forudsætter, at dataelementerne hver har et nøglefelt, der kan sorteres efter.","Man kan som udgangspunkt udføre følgende operationer på datastrukturer:","Brugen af datastrukturer giver mulighed for, at der kan programmeres mere effektivt.","Datastrukturer kan groft deles op i to slags. Nogle af dem som for eksempel stakken er beregnet til at håndtere data i ram mens andre som B-træet er velegnede som strukturen i en fil.","Der er en del udtryk, der går igen ved beskrivelse af datastrukturer. Nogle af de vigtigste er:"]},{"lastTimeCrawled":"2024-01-06T12:15:23.138514300","images":[{"src":"https://de.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://de.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://de.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Datenstruktur \u2013 Wikipedia","rating":0,"pageId":"265fe335-6ce1-478b-80ad-0af753dbd96e","pageName":"wikipedia.org","url":"https://de.wikipedia.org/wiki/Datenstruktur","content":["In der Informatik und Softwaretechnik ist eine Datenstruktur ein Objekt, welches zur Speicherung und Organisation von Daten dient. Es handelt sich um eine Struktur, weil die Daten in einer bestimmten Art und Weise angeordnet und verknüpft werden, um den Zugriff auf sie und ihre Verwaltung effizient zu ermöglichen.","Datenstrukturen sind nicht nur durch die enthaltenen Daten charakterisiert, sondern vor allem durch die Operationen auf diesen Daten, die Zugriff und Verwaltung ermöglichen und realisieren.","Die Festlegung (Definition) von Datenstrukturen erfolgt im Allgemeinen durch eine exakte Beschreibung (Spezifikation) zur Datenhaltung und der dazu nötigen Operationen. Diese konkrete Spezifikation legt das allgemeine Verhalten der Operationen fest und abstrahiert damit von der konkreten Implementierung der Datenstruktur.","Wird der Schwerpunkt der Betrachtung nicht auf die konkrete Implementierung der Operationen verschoben, so wird anstelle des Begriffs Datenstruktur auch häufig von einem abstrakten Datentyp gesprochen.\nDer Übergang von der Datenstruktur zu einem abstrakten Datentyp ist dabei nicht klar definiert, sondern hängt einzig von der Betrachtungsweise ab. Mit Blick auf den oft veränderlichen Speicherbedarf vieler Datenstrukturen wird dann auch von dynamischen Datentypen gesprochen, denen technisch eine dynamische Speicherverwaltung zugrunde liegt.","Von den meisten Datenstrukturen gibt es neben ihrer Grundform viele Spezialisierungen, die eigens für die Erfüllung einer bestimmten Aufgabe spezifiziert wurden. So sind beispielsweise B-Bäume als Spezialisierung der Datenstruktur Baum besonders gut für Implementierungen von Datenbanken geeignet.","Bei vielen Algorithmen hängt der Ressourcenbedarf, also sowohl die benötigte Laufzeit als auch der Speicherplatzbedarf, von der Verwendung geeigneter Datenstrukturen ab.","Die folgenden Datenstrukturen sind in der Regel für die klassische imperative Programmierung entwickelt und optimiert worden. Andere Programmierparadigmen wie die funktionale Programmierung können durchaus andere Datenstrukturen erfordern.","Datensätze (auch 'Tupel' oder englisch Record genannt) sind die einfachsten Datenstrukturen. Sie verkörpern üblicherweise in einer fest definierten Anzahl und Folge Werte, die andere Werte enthalten. Datensätze identifizieren sich meist durch eines oder mehrere der in ihnen enthaltenen Elemente, oft Datenfeld genannt.","Das Array (auch Feld) ist die einfachste verwendete Datenstruktur. Es werden hierbei mehrere Variablen vom selben Basisdatentyp gespeichert. Ein Zugriff auf die einzelnen Elemente wird über einen Index möglich. Technisch gesehen entspricht dieser dem Wert, der zu der Startadresse des Arrays im Speicher addiert wird, um die Adresse des Objektes zu erhalten. Die einzigen notwendigen Operationen sind das indizierte Speichern und das indizierte Lesen, die auf jedes Element des Arrays direkt zugreifen können. Im eindimensionalen Fall wird das Array häufig als Vektor und im zweidimensionalen Fall als Tabelle oder Matrix bezeichnet. Arrays sind aber keinesfalls nur auf zwei Dimensionen beschränkt, sondern werden beliebig mehrdimensional verwendet. Wegen ihrer Einfachheit und grundlegenden Bedeutung bieten die allermeisten Programmiersprachen eine konkrete Umsetzung dieser Datenstruktur als zusammengesetzten Datentyp Array im Grundsprachumfang an.","Einen Sonderfall bildet die Zuordnungstabelle (auch assoziatives Array oder Schlüssel-Wert-Paar), bei dem nicht über einen numerischen Index, sondern über einen Schlüssel auf die gespeicherten Daten zugegriffen wird. Eine mögliche Art, ein assoziatives Array zu implementieren, ist die Hashtabelle.","Einen weiteren Sonderfall bildet die Menge. Hier kann nicht auf konkrete Werte mittels Index oder Schlüssel zugreifen. Sie ist ungeordnet. Es entspricht einer Zuordnungstabelle mit Schlüsseln, die nur einmalig vorkommen können, aber ohne Werte.","Die (verkettete) Liste ist eine Datenstruktur zur dynamischen Speicherung von beliebig vielen Objekten. Dabei beinhaltet jedes Listenelement einer verketteten Liste als Besonderheit einen Verweis auf das nächste Element, wodurch die Gesamtheit der Objekte zu einer Verkettung von Objekten wird. Die zu einer Liste gehörenden Operationen sind relativ unspezifiziert. Sie werden oft in komplizierteren Datenstrukturen verwendet und statt über Operationen wird dort aus Effizienzgründen meist direkt auf ihre Elemente zugegriffen. Die in Programmbibliotheken angebotenen Listen sind in ihrer zugrunde liegenden Datenstruktur meist viel komplexer und stellen nicht selten gar keine echten Listen dar, geben sich nach außen aber als solche aus. Listen sind stets lineare Strukturen. Werden Vorgänger und Nachfolger bidirektional verkettet, so spricht man von einer doppelt-verketteten Liste.","In einer Warteschlange (englisch queue) kann eine beliebige Anzahl von Objekten gespeichert werden, jedoch können die gespeicherten Objekte nur in der gleichen Reihenfolge wieder gelesen werden, wie sie gespeichert wurden. Dies entspricht dem FIFO-Prinzip.\nFür die Definition und damit die Spezifikation der Queue ist es unerheblich, welche Objekte in ihr gespeichert werden. Zu einer Queue gehören zumindest die Operationen","Eine Warteschlange wird gewöhnlich als verkettete Liste implementiert, kann intern aber auch ein Array verwenden; in diesem Fall ist die Anzahl der Elemente begrenzt.","In einem Stapelspeicher (englisch stack) kann eine beliebige Anzahl von Objekten gespeichert werden, jedoch können die gespeicherten Objekte nur in umgekehrter Reihenfolge wieder gelesen werden. Dies entspricht dem LIFO-Prinzip. Für die Definition und damit die Spezifikation des Stapelspeichers ist es unerheblich, welche Objekte in ihm gespeichert werden. Zu einem Stapelspeicher gehören zumindest die Operationen","Die top-Operation ist nicht zwingend vorgeschrieben, wird aber oft implementiert, um pop/push zu ersetzen, da es oft interessant ist, das oberste Element zu \u201etesten\u201c. Ein Stapelspeicher wird gewöhnlich als Liste implementiert, kann aber auch ein Vektor sein.","Bei der Deque (Double-ended queue) handelt es sich um eine Datenstruktur ähnlich der Warteschlange oder des Stapelspeichers. Es kombiniert die Eigenschaften beider Datenstrukturen. Der Unterschied besteht darin, dass die Daten an beiden Enden gelesen, eingefügt oder entfernt werden können.","Eine Spezialisierung der Warteschlange ist die Vorrangwarteschlange, die auch Prioritätswarteschlange bzw. engl. Priority Queue genannt wird. Dabei wird vom FIFO-Prinzip abgewichen. Die Durchführung der enqueue-Operation, die in diesem Fall auch insert-Operation genannt wird, sortiert das Objekt gemäß einer gegebenen Priorität, die jedes Objekt mit sich führt, in die Vorrangwarteschlange ein. Die dequeue-Operation liefert immer das Objekt mit der höchsten Priorität. Vorrangwarteschlangen werden meist mit Heaps implementiert.","Ein Graph ermöglicht es als Datenstruktur die Unidirektionalität der Verknüpfung zu überwinden. Die Operationen sind auch hier das Einfügen, Löschen und Finden eines Objekts. Die bekannteste Repräsentation von Graphen im Computer sind die Adjazenzmatrix, die Inzidenzmatrix und Adjazenzliste. Planare Graphen lassen sich mittels Half-Edge-Datenstruktur abbilden.","Bäume sind spezielle Formen von Graphen in der Graphentheorie. Als Datenstruktur werden meist nur Out-Trees verwendet. Dabei können ausgehend von der Wurzel mehrere gleichartige Objekte miteinander verkettet werden, sodass die lineare Struktur der Liste aufgebrochen wird und eine Verzweigung stattfindet. Da Bäume zu den meist verwendeten Datenstrukturen in der Informatik gehören, gibt es viele Spezialisierungen.","So beträgt bei Binärbäumen die Anzahl der Kinder höchstens zwei und in höhen-balancierten Bäumen gilt zusätzlich, dass sich die Höhen des linken und rechten Teilbaums an jedem Knoten nicht zu sehr unterscheiden.","Bei geordneten Bäumen, insbesondere Suchbäumen, sind die Elemente in der Baumstruktur geordnet abgelegt, sodass man schnell Elemente im Baum finden kann. Man unterscheidet hier weiter in binäre Suchbäume mit AVL-Bäumen (darunter Fibonacci-Bäume) als balancierte Version und B-Bäumen sowie einer Variante, den B*-Bäumen. Spezialisierungen von B-Bäumen sind wiederum 2-3-4-Bäume, welche oft als Rot-Schwarz-Bäume implementiert werden.","Nicht sortiert, aber \u201everschachtelt\u201c sind geometrische Baumstrukturen wie der R-Baum und seine Varianten. Hier werden nur diejenigen Teilbäume durchsucht, die sich mit dem angefragten Bereich überlappen.","Bäume sind in ihrem Aufbau zwar mehrdimensional jedoch in der Verkettung der Objekte oft unidirektional. Die Verkettung der gespeicherten Objekte beginnt bei der Wurzel des Baums und von dort in Richtung der Knoten des Baums.","Der Heap (auch Halde oder Haufen) vereint die Datenstruktur eines Baums mit den Operationen einer Vorrangwarteschlange. Häufig hat der Heap neben den minimal nötigen Operationen wie insert, remove und extractMin auch noch weitere Operationen wie merge oder changeKey. Je nach Reihenfolge der Priorität in der Vorrangwarteschlange wird ein Min-Heap oder ein Max-Heap verwendet. Weitere Spezialisierungen des Heap sind der Binäre Heap, der Binomial-Heap und der Fibonacci-Heap. Heaps werden meistens über Bäume aufgebaut.","Der Treap vereinigt Eigenschaften von Bäumen (\u201eTrees\u201c) und Heaps in sich.","Die Hashtabelle bzw. Streuwerttabelle ist eine spezielle Indexstruktur, bei der die Speicherposition direkt berechnet werden kann. Hashtabellen stehen dabei in Konkurrenz zu Baumstrukturen, die im Gegensatz zu Hashtabellen alle Indexwerte in einer Ordnung wiedergeben können, aber einen größeren Verwaltungsaufwand benötigen, um den Index bereitzustellen. Beim Einsatz einer Hashtabelle zur Suche in Datenmengen spricht man auch vom Hashverfahren. Bei sehr großen Datenmengen kann eine verteilte Hashtabelle zum Einsatz kommen."]},{"lastTimeCrawled":"2024-01-06T12:15:23.538556100","images":[{"src":"https://et.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://et.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-et.svg","alt":"Vikipeedia"},{"src":"https://et.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-et.svg","alt":""},{"src":"https://et.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://et.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://et.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Andmestruktuur \u2013 Vikipeedia","rating":0,"pageId":"85dc55c5-0be4-4fde-818b-9651fd360960","pageName":"wikipedia.org","url":"https://et.wikipedia.org/wiki/Andmestruktuur","content":["Andmestruktuur on informaatikas andmete talletamise ja organiseerimise viis.","Andmestruktuurid on näiteks loend, massiiv, kuhi, puu, paisktabel ja magasin.","Enamik assemblerkeeli andmestruktuure ei toeta."]},{"lastTimeCrawled":"2024-01-06T12:15:24.855397200","images":[{"src":"https://el.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://el.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-el.svg","alt":"Βικιπαίδεια"},{"src":"https://el.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-el.svg","alt":"Η Ελεύθερη Εγκυκλοπαίδεια"},{"src":"https://el.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://el.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://el.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Δομή δεδομένων - Βικιπαίδεια","rating":0,"pageId":"9b668a59-990f-4b41-bd8e-9e9dd5942232","pageName":"wikipedia.org","url":"https://el.wikipedia.org/wiki/%CE%94%CE%BF%CE%BC%CE%AE_%CE%B4%CE%B5%CE%B4%CE%BF%CE%BC%CE%AD%CE%BD%CF%89%CE%BD","content":["Στην πληροφορική, η έννοια της δομής δεδομένων αναφέρεται στους διαφορετικούς δυνατούς τρόπους οργάνωσης και αποθήκευσης δεδομένων μέσα σε έναν υπολογιστή, ώστε τα δεδομένα αυτά να μπορούν να χρησιμοποιηθούν αποδοτικά. Για παράδειγμα ένα σύνολο από δεδομένα μπορεί να αποθηκευτεί σε δομή πίνακα, στοίβας, συνδεδεμένης λίστας, σωρού, ουράς και ούτω καθ εξής.","Σε συγκεκριμένες εφαρμογές χρησιμοποιούνται συγκεκριμένες δομές δεδομένων, δηλαδή αυτές που είναι οι πιο αποδοτικές αλγοριθμικά για το κάθε είδος εφαρμογής. Για παράδειγμα, τα Β-δέντρα χρησιμοποιούνται σε υλοποιήσεις βάσεων δεδομένων.","Δομές δεδομένων χρησιμοποιούνται σχεδόν σε κάθε πρόγραμμα ή σύστημα λογισμικού. Παρέχουν έναν τρόπο αποδοτικής διαχείρισης τεράστιου όγκου δεδομένων, όπως μεγάλες βάσεις δεδομένων και υπηρεσίες ευρετηρίου στο διαδίκτυο. Οι αποδοτικές δομές δεδομένων θεωρούνται συχνά ιδιαίτερα σημαντικές στη δημιουργία ενός αποδοτικού αλγορίθμου, σε τέτοιο βαθμό, ώστε κάποιες μέθοδοι σχεδίασης και γλώσσες προγραμματισμού δίνουν έμφαση σε δομές δεδομένων, παρά σε αλγορίθμους, ως το βασικό κριτήριο σχεδίασης λογισμικού.","Ένα σύνολο από στοιχεία δεδομένων αποτελεί δομή όταν υπάρχουν καθορισμένες σχέσεις μεταξύ των στοιχείων. Μια δομή δεδομένων ορίζεται ως η διαδικασία εισαγωγής και απομάκρυνσης στοιχείων με τρόπο ώστε όλη η δομή να μην αλλοιώνεται.\nΚάθε δομή δεδομένων έχει ως αφηρημένη έννοια συγκεκριμένο ορισμό, δηλαδή διαδικασία εισαγωγής/απομάκρυνσης στοιχείων, αλλά μπορεί να υλοποιείται σε έναν Η/Υ με διαφορετικούς τρόπους.","Οι βασικότερες λειτουργίες ή πράξεις επί των δομών δεδομένων είναι οι εξής:","Σε αρκετές δομές δεδομένων συχνά ορίζονται επιπλέον λειτουργίες, όπως οι ακόλουθες:"]},{"lastTimeCrawled":"2024-01-06T12:15:27.243171100","images":[{"src":"https://es.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://es.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg","alt":"Wikipedia"},{"src":"https://es.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-es.svg","alt":"La enciclopedia libre"},{"src":"https://es.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://es.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://es.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Estructura de datos - Wikipedia, la enciclopedia libre","rating":0,"pageId":"ab543937-7c82-44d1-ac20-f2723c238fb2","pageName":"wikipedia.org","url":"https://es.wikipedia.org/wiki/Estructura_de_datos","content":["En ciencias de la computación, una estructura de datos[1]\u200b es una forma particular de organizar información en un computador para que pueda ser utilizada de manera eficiente.[2]\u200b[3]\u200b[4]\u200b Diferentes tipos de estructuras de datos son adecuados para diferentes tipos de aplicaciones, y algunos son altamente especializados para tareas específicas.","Las estructuras de datos son medios para manejar grandes cantidades de información de manera eficiente para usos tales como grandes bases de datos y servicios de indización de Internet. Por lo general, las estructuras de datos eficientes son clave para diseñar algoritmos eficientes. Algunos métodos formales de diseño de lenguajes de programación destacan las estructuras de datos, en lugar de los algoritmos, como el factor clave de organización en el diseño de software. Más precisamente, una estructura de datos es una colección de valores, las relaciones entre ellos y las funciones y operaciones que se pueden aplicar a los datos,[5]\u200b es decir, es una estructura algebraica de datos.","Las estructuras de datos se basan generalmente en la capacidad de un ordenador para recuperar y almacenar datos en cualquier lugar de su memoria.","Las estructuras de datos pueden ser de diferentes tipos, dependiendo de la técnica que se utilice para su almacenamiento y recuperación, estos tipos son los siguientes:","Según la secuencia que se presenta entre cada elemento al momento de realizar el recorrido entre los elementos de la estructura de datos, esta se puede clasificar en los siguientes tipos:","Existen numerosos tipos de estructuras de datos, generalmente construidas sobre otras más simples:","La mayoría de los lenguajes ensambladores y algunos lenguajes de bajo nivel, tales como BCPL, carecen de soporte de estructuras de datos. En cambio, muchos lenguajes de alto nivel y algunos lenguajes ensambladores de alto nivel, tales como MASM, tienen algún tipo de soporte incorporado para ciertas estructuras de datos, tales como los registros y arreglos. Por ejemplo, los lenguajes C y Pascal soportan estructuras y registros, respectivamente, además de arreglos y matrices multidimensionales.[7]\u200b[8]\u200b","La mayoría de los lenguajes de programación disponen de algún tipo de biblioteca o mecanismo que permita el uso de estructuras de datos en los programas. Los lenguajes modernos por lo general vienen con bibliotecas estándar que implementan las estructuras de datos más comunes. Ejemplos de ello son la biblioteca  Standard Template Library de C++, las colecciones de Java[9]\u200b y las bibliotecas .NET de Microsoft.","En programación, una estructura de datos puede ser declarada inicialmente escribiendo una palabra reservada, luego un identificador para la estructura y un nombre para cada uno de sus miembros, sin olvidar los tipos de datos que estos representan. Generalmente, cada miembro se separa con algún tipo de operador, carácter o palabra reservada.","En el lenguaje de programación Pascal, es posible crear una estructura de datos de la forma mencionada. La sintaxis básica es:","Para acceder a los miembros de una estructura, primero se debe crear una referencia a esta, generalmente con una variable de tipo; luego se pueden editar y obtener los datos de los miembros libremente."]},{"lastTimeCrawled":"2024-01-06T12:15:28.124030400","images":[{"src":"https://eo.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://eo.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-eo.svg","alt":"Vikipedio"},{"src":"https://eo.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-eo.svg","alt":""},{"src":"https://eo.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://eo.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://eo.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Datumstrukturo - Vikipedio","rating":0,"pageId":"7cfed7c5-8e11-41eb-891a-90d1961bd191","pageName":"wikipedia.org","url":"https://eo.wikipedia.org/wiki/Datumstrukturo","content":["Datumstrukturo estas programpeco, ebliganta konservi kaj prilabori aron da samtipaj aŭ logike interrilataj datumoj en komputil(ar)o. Por aldono, forigo, atingo aŭ ŝanĝado de la komponantaj datumoj la datumstrukturo disponigas aron da funkcioj aŭ operacioj.","Internacie la terminoj respondaj al la angla data structure povas havi plurajn parencajn, tamen ja malsamajn signifojn, interalie:","Kroma komplikaĵo estas la tradicia misuzo de la tre ĝenerala vorto angle structure por la speciala nocio rikordo en C kaj ties posteuloj.","Datumstrukturojn oni konstruas el bazaj datumtipoj kaj iliaj operacioj en la uzata programlingvo.","Multaj gravaj datumstrukturoj disponeblas en programlingvaj bibliotekoj aŭ estas enkonstruitaj en programlingvon mem. Ekz-e la datumstrukturo «hakettabelo» estas enkonstruita en la programlingvojn Lua, Perl, Python, Ruby, Tcl k.a.","La bazaj konstruaj blokoj por pliparto da datumstrukturoj inkludas masivajn tabelojn, rikordojn, referencojn."]},{"lastTimeCrawled":"2024-01-06T12:15:29.506202500","images":[{"src":"https://eu.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://eu.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg","alt":"Wikipedia"},{"src":"https://eu.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-eu.svg","alt":"Entziklopedia askea"},{"src":"https://eu.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://eu.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://eu.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Datu-egitura - Wikipedia, entziklopedia askea.","rating":0,"pageId":"f0442db4-7e7d-423e-9214-ea34a1e747ae","pageName":"wikipedia.org","url":"https://eu.wikipedia.org/wiki/Datu-egitura","content":["Datu-egitura bat, konputagailuen programazioan, hainbat datu antolatzeko modu bat da, geroago datu horien tratamendua errazago egin ahal izatearren. Oinarrizko datu bat da sistema batean dagoen gutxieneko informazioa, hainbat oinarrizko datu antolatuta sortzen dira datu-egiturak.[1]","Datu-egitura batek, alde batetik, barruan dituen datuen antolaketa eta haien arteko erlazioa definitzen ditu, eta beste aldetik, datu horiekin aplikatu ahal izango diren eragiketen multzoa ere.[2] Oinarrizko eragiketak hauek izaten dira:","Ohiko beste eragiketa hauek ere egin daitezke:","Egitura bakoitzaren antolaketak abantailak eta desabantailak izango ditu eragiketa bakoitza programatzerakoan, sinpletasunari eta eraginkortasunari dagokienez. Hala, programatu behar den problema bakoitzerako datu-egitura egokia ondo hautatzea funtsezkoa izango da, zenbait faktore hartu beharko dira kontuan, hala nola eragiketa bakoitza datuen gainean zein maiztasunarekin aplikatu beharko den eta zein ordenatan."]},{"lastTimeCrawled":"2024-01-06T12:15:31.382077800","images":[{"src":"https://fa.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://fa.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-fa.svg","alt":"ویکی\u200cپدیا"},{"src":"https://fa.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-fa.svg","alt":"دانشنامهٔ آزاد"},{"src":"https://fa.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://fa.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://fa.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"ساختمان داده\u200cها - ویکی\u200cپدیا، دانشنامهٔ آزاد","rating":0,"pageId":"bc300c4f-114d-452f-ba7a-df9eb5f35dc3","pageName":"wikipedia.org","url":"https://fa.wikipedia.org/wiki/%D8%B3%D8%A7%D8%AE%D8%AA%D9%85%D8%A7%D9%86_%D8%AF%D8%A7%D8%AF%D9%87%E2%80%8C%D9%87%D8%A7","content":["ساختار داده\u200cها[۱] یا ساختمان داده\u200cها یا داده ساختارها[۲] (به انگلیسی: Data Structure) از بنیادی\u200cترین مباحث مورد نیاز جهت یادگیری و درک بسیاری از مفاهیم عمده در علوم رایانه است. سازمان\u200cدادنِ داده\u200cها به یک طریق خاص و بر پایهٔ مدل منطقی یا ریاضی که به منظور استفادهٔ بهینه از داده\u200cها صورت می\u200cگیرد را یک داده ساختار می\u200cگویند. داده ساختارها انواع گوناگونی دارند که هر کدام مناسب برنامه\u200cهای مختلفی هستند.[۳][۴] در اصطلاح «ساختار داده»، قسمت «ساختار» به یک «ساختار جبری» در مورد داده اشاره دارد.","ساختمان داده\u200cها روش\u200cهای ذخیره داده\u200cها در رایانه با هدف دسترسی آسان\u200cتر و بهینه تر است درحالی\u200cکه الگوریتم روشی به منظور حل مسئله به وسیله کامپیوتر است.","این یک مقالهٔ خرد  برنامه\u200cنویسی کامپیوتری است. می\u200cتوانید با گسترش آن به ویکی\u200cپدیا کمک کنید.","این یک مقالهٔ خرد  علوم رایانه است. می\u200cتوانید با گسترش آن به ویکی\u200cپدیا کمک کنید."]},{"lastTimeCrawled":"2024-01-06T12:15:33.792711200","images":[{"src":"https://fr.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://fr.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-fr.svg","alt":"Wikipédia"},{"src":"https://fr.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-fr.svg","alt":"l'encyclopédie libre"},{"src":"https://fr.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://fr.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://fr.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Structure de données \u2014 Wikipédia","rating":0,"pageId":"1ffdd4d4-e2da-4363-9c91-aa43f0642794","pageName":"wikipedia.org","url":"https://fr.wikipedia.org/wiki/Structure_de_donn%C3%A9es","content":["En informatique, une structure de données est une manière d'organiser les données pour les traiter plus facilement. Une structure de données est une mise en œuvre concrète d'un type abstrait.","Pour prendre un exemple de la vie quotidienne, on peut présenter des numéros de téléphone par département, par nom, par profession (comme les Pages jaunes), par numéro téléphonique (comme les annuaires destinés au télémarketing), par rue et/ou une combinaison quelconque de ces classements. À chaque usage correspondra une structure d'annuaire appropriée.","En organisant d'une certaine manière les données, on permet un traitement automatique de ces dernières plus efficace et rapide.","Le fait d'utiliser une structure de données appropriée à un traitement informatique peut également faire baisser de manière significative la complexité d'une application informatique et ainsi contribuer à diminuer le taux d'erreurs.","Différentes structures de données existent pour des données différentes ou répondant à des contraintes algorithmiques différentes :","Une collection séquentielle permet de ranger des objets dans un ordre arbitraire.","On parle de collection indexée quand on peut accéder à chaque élément de la collection par un numéro d'ordre (l'index). Le choix d'une implémentation particulière dépend d'un certain nombre de compromis, comme l'occupation mémoire ou les performances requises pour diverses opérations de base : itération, ajout d'un élément (au début, à la fin ou encore dans un emplacement quelconque de la collection), indexation, suppression d'un élément, décompte du nombre d'éléments, etc.","Il existe deux grands types de collections séquentielles :","Un certain nombre de structures de données sont des restrictions de collections séquentielles, qui n'autorisent qu'un sous-ensemble des opérations de base :","Le type abstrait file à priorités est une collection d'éléments indexés par des clés sur lesquels on peut effectuer deux opérations : l'insertion d'un élément et l'extraction de l'élément de plus grande clé.","On peut implémenter une union sur les files à priorité :","Ce type de collection nommé tableau associatif, dictionnaire ou map permet de ranger des objets en fonction d'une clef dans une table de symboles.\nLa clef doit généralement respecter un certain nombre d'invariants pour être valide (valeur de hachage ou résultats de la comparaison par exemple).","Les collections posent des problèmes de typage des données stockées. Comment garantir le type d'un objet qui est stocké dans une liste par exemple ?","Ce problème n'est pas rédhibitoire dans les langages informatiques à typage dynamique, où le type exact de l'objet peut être vérifié à l'exécution par introspection. Il est plus gênant dans les langages informatiques à typage statique puisqu'il oblige le programmeur, soit à devoir programmer une classe conteneur spécialisée pour chaque type de donnée à traiter, soit à violer la sûreté de typage en utilisant des conversions de type (en anglais : coercions).","Cette difficulté a conduit de nombreux langages informatiques à permettre la programmation générique pour définir des types paramétrés. Par exemple en C++, la commande std::list<std::string> définit une liste doublement chaînée pouvant contenir des chaines de caractères."]},{"lastTimeCrawled":"2024-01-06T12:15:36.251089","images":[{"src":"https://gl.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://gl.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg","alt":"Wikipedia"},{"src":"https://gl.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-gl.svg","alt":"a Wikipedia en galego"},{"src":"https://gl.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://gl.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://gl.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Estrutura de datos - Wikipedia, a enciclopedia libre","rating":0,"pageId":"b80abc4c-87bf-438f-a33a-4e4556f72bea","pageName":"wikipedia.org","url":"https://gl.wikipedia.org/wiki/Estrutura_de_datos","content":["En programación, unha estrutura de datos é unha forma particular de organizar datos nun ordenador para que poidan ser utilizados de maneira eficiente. Pode dicirse que a programción é o tratamento con algoritmos dos datos estruturados.[1]","Diferentes tipos de estruturas de datos son axeitadas para diferentes usos, e algunhas son altamente especializadas para tarefas específicas. Polo xeral, as estruturas de datos especializadas son chave para deseñar algoritmos eficientes. Algúns métodos formais de deseño de linguaxes de programación destacan as estruturas de datos, polo menos á par dos algoritmos, como o factor chave de organización no deseño de software.[1]","As estruturas de datos baséanse xeralmente na capacidade dun ordenador para recuperar e almacenar datos en calquera lugar da súa memoria.","En programación, unha estrutura de datos pode ser declarada inicialmente escribindo unha palabra reservada, logo un identificador para a estrutura e un nome para cada un dos seus membros ou campos, sen esquecer os tipos de datos que se lles asocian. Xeralmente, cada membro ou campo vai separado por algún tipo de operador, carácter ou palabra reservada.","Na linguaxe de programación Pascal é posible crear unha estrutura de datos da forma mencionada. A sintaxe básica é:","Para acceder aos membros dunha estrutura primeiro débese crear unha referencia a esta, xeralmente cunha variable de tipo, logo pódense editar e obter os datos dos membros libremente:","Concentra elementos dando lugar a unha estrutura ordenada e relacionada.[2]","Unha lista enlazada é unha das estruturas de datos fundamentais, e pode ser usada para construír outras estruturas de datos. Consiste nunha secuencia de nodos, nos que se gardan campos de datos arbitrarios e unha ou dúas referencias, enlaces ou punteiros ao nodo anterior ou posterior. O principal beneficio das listas enlazadas respecto aos vectores convencionais é que a orde dos elementos enlazados pode ser diferente á orde de almacenamento na memoria ou o disco, permitindo que a orde do percorrido da lista sexa diferente ao de almacenamento.","Unha cola é unha lista ordenada ou estrutura de datos na que o modo de acceso aos seus elementos é de tipo FIFO (do inglés First In First Out, primeiro en entrar, primeiro en saír) que permite almacenar e recuperar datos.","Unha pila é unha lista ordenada ou estrutura de datos na que o modo de acceso aos seus elementos é de tipo LIFO (do inglés Last In First Out, último en entrar, primeiro en saír) que permite almacenar e recuperar datos.","Unha árbore é unha estrutura de datos que imita a forma dunha árbore (un conxunto de nodos conectados). Un nodo é a unidade sobre a que se constrúe a árbore e pode ter cero ou máis nodos fillos conectados a el. Dise que un nodo A é pai dun nodo B se existe un enlace dende A ata B (nese caso, tamén dicimos que B é fillo de A). Só pode haber un único nodo sen pais, que se denomina comunmente nodo raíz. Un nodo que non ten fillos coñécese como nodo folla. Os demais nodos (que teñen pai e un ou varios fillos) coñéceselles como nodos rama."]},{"lastTimeCrawled":"2024-01-06T12:15:39.036299500","images":[{"src":"https://ko.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://ko.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-ko.svg","alt":"위키백과"},{"src":"https://ko.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-ko.svg","alt":""},{"src":"https://ko.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://ko.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://ko.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"자료 구조 - 위키백과, 우리 모두의 백과사전","rating":0,"pageId":"1a6c087c-8a71-46c1-b96b-8271f9c51d39","pageName":"wikipedia.org","url":"https://ko.wikipedia.org/wiki/%EC%9E%90%EB%A3%8C_%EA%B5%AC%EC%A1%B0","content":["자료구조(資料構造, 영어: data structure)는 컴퓨터 과학에서 효율적인 접근 및 수정을 가능케 하는 자료의 조직, 관리, 저장을 의미한다.[1][2][3] 더 정확히 말해, 자료 구조는 데이터 값의 모임, 또 데이터 간의 관계, 그리고 데이터에 적용할 수 있는 함수나 명령을 의미한다.[4] 신중히 선택한 자료구조는 보다 효율적인 알고리즘을 사용할 수 있게 한다. 이러한 자료구조의 선택문제는 대개 추상 자료형의 선택으로부터 시작하는 경우가 많다. 효과적으로 설계된 자료구조는 실행시간 혹은 메모리 용량과 같은 자원을 최소한으로 사용하면서 연산을 수행하도록 해준다.","자료구조에는 여러 종류가 있으며, 이러한 각각의 자료구조는 각자의 연산 및 목적에 맞추어져 있다. 예를 들어 B-트리는 데이터베이스에 효율적이며, 라우팅 테이블은 네트워크(인터넷, 인트라넷)에 일반적이다.","다양한 프로그램을 설계할 때, 어떠한 자료구조를 선택할지는 가장 우선적으로 고려되어야 한다. 이는 큰 시스템을 제작할 때 구현의 난이도나 최종 결과물의 성능이 자료구조에 크게 의존한다는 것을 많은 경험이 뒷받침하기 때문이다. 일단 자료구조가 선택되면 적용할 알고리즘은 상대적으로 명확해지기 마련이다. 때로는 반대 순서로 정해지기도 하는데, 이는 목표로 하는 연산이 특정한 알고리즘을 반드시 필요로 하며, 해당 알고리즘은 특정 자료구조에서 가장 나은 성능을 발휘할 때와 같은 경우이다. 어떠한 경우든, 적절한 자료구조의 선택은 필수적이다.","이러한 관점은 알고리즘보다 자료구조가 보다 중요한 요소로 적용되는 많은 정형화된 개발론 그리고 프로그래밍 언어의 개발을 촉발시켰다. 대부분의 언어는 일정 수준의 모듈개념을 가지고 있으며, 이는 자료구조가 검증된 구현은 감춘 채 인터페이스만을 이용하여 다양한 프로그램에서 사용되는 것을 가능하게 해준다. C++, 자바와 같은 객체지향 프로그래밍 언어는 특별히 이러한 목적으로 객체를 사용한다.","이러한 자료구조의 중요성으로 말미암아, 최근의 프로그래밍 언어 및 개발 환경은 다양한 표준 라이브러리를 제공하고 있다. 예로, C++의 표준 템플릿 라이브러리나 자바의 자바 API, 마이크로소프트 .NET과 같은 것들을 들 수 있다.","자료구조에서 가장 기초적인 단위는 행렬, 레코드, 유니온, 참조와 같은 것이다. 예를 들어, Nullable 참조는 참조와 유니온의 조합으로 나타낼 수 있으며, 가장 단순한 자료구조 가운데 하나인 연결 리스트는 레코드와 Nullable 참조로 나타낼 수 있다.","자료의 특성과 크기, 주요 사용법과 수행하는 연산의 종류, 구현에 필요한 기억 공간 크기에 따라 여러 가지 종류의 자료구조 중 하나를 선택할 수 있다. 자료구조의 종류로는 자료형의 따라 분류하는 단순 구조와 자료 간 관계가 1 대 1인 선형 구조, 1 대 다 혹은 다 대 다 구조인 비선형 구조, 마지막으로 파일 구조가 있다.[5]"]},{"lastTimeCrawled":"2024-01-06T12:15:40.396611400","images":[{"src":"https://hi.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://hi.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-hi.svg","alt":"विकिपीडिया"},{"src":"https://hi.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-hi.svg","alt":""},{"src":"https://hi.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://hi.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://hi.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"आंकड़ा संरचना - विकिपीडिया","rating":0,"pageId":"007228f7-c4e8-4407-abac-320c68ba759d","pageName":"wikipedia.org","url":"https://hi.wikipedia.org/wiki/%E0%A4%86%E0%A4%82%E0%A4%95%E0%A4%A1%E0%A4%BC%E0%A4%BE_%E0%A4%B8%E0%A4%82%E0%A4%B0%E0%A4%9A%E0%A4%A8%E0%A4%BE","content":["कम्प्यूुटर विज्ञान में, किसी समस्या में उपयोग में आने वाले आँकड़ों को कई प्रकार से व्यवस्थित किया जा सकता है। आँकड़ों की इसी व्यवस्था या विन्यास को आंकड़ा संरचना (डेटा स्ट्रक्चर) कहते हैं। स्पष्टतः आँकड़ों को इस प्रकार विन्यस्त करना चाहिये कि प्रोग्राम द्वारा उन आंकड़ों का उपयोग दक्षतापूर्वक (efficiently) किया जा सके।[1]","कुछ प्रमुख आंकड़ा संरचनाएँ ये हैं- लिस्ट, लिंक्ड लिस्ट, स्टैक, ट्री आदि।","किसी समस्या के लिये कोई आंकड़ा संरचना उपयुक्त होती है तो किसी दूसरी समस्या के लिये कोई दूसरी आंकड़ा संरचना। कुछ आँकड़ा संरचनाएँ तो कुछ विशेष कामों के लिये ही प्रयुक्त होती हैं। उदाहरण के लिये, रिलेशनल डेटाबेस से आंकड़ों की पुनःप्राप्ति (retrieval) के लिये प्रायः बी-ट्री इन्डेक्सेस (B-tree indexes) का प्रयोग किया जाता है जबकि कम्पाइलर के निर्माण में आइडेन्टिफायरों (identifiers) को पहचानने के लिये प्रायः हैश टेबल (hash tables) का उपयोग किया जाता है।","प्रायः दक्ष अल्गोरिद्म डिजाइन करने के लिये दक्ष आंकडा संरचना का होना बहुत जरूरी है। आंकड़ा संरचना का उपयोग मुख्य स्मृति एवं द्वितीयक स्मृति दोनों में आंकड़ों को भण्डारित करने एवं उन्हें प्राप्त करने के लिये किया जाता है।"]},{"lastTimeCrawled":"2024-01-06T12:15:41.473115900","images":[{"src":"https://hr.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://hr.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-hr.svg","alt":"Wikipedija"},{"src":"https://hr.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-hr.svg","alt":"Slobodna enciklopedija"},{"src":"https://hr.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://hr.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://hr.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Podatkovna struktura \u2013 Wikipedija","rating":0,"pageId":"8cddb51d-9bae-473a-8a36-5d5ed117c3fe","pageName":"wikipedia.org","url":"https://hr.wikipedia.org/wiki/Podatkovna_struktura","content":["Podatkovna struktura je pojam iz računalstva. Poseban je način na koji se organizira i pohranjuje podatke u računalu, tako da ih se može učinkovito rabiti.[1][2]","Različite vrste podatkovnih struktura su skrojene za razne vrste aplikacija. Neke su visokospecijalizirane za posebne zadaće. Primjerice, B-stablo je osobito dobro skrojen za primjenu baza podataka, dok primjene jezičnog prevoditelja rabe hash tablice da bi tražili identifikatore.","Podatkovne strukture se rabi u skoro svakom programu ili softverskom sustavu. Daju sredstvo kojim se može učinkovito upravljati velikim količinama podataka, kao što su baze podataka i servisi za indeksiranje interneta. Obično su ključem za dizajniranje učinkovitih algoritama. Neke formalne metode dizajniranja i neki programski jezici obuhvaćaju podatkovne strukture, a ne algoritme kao ključni čimbenik pri dizajniranju softvera."]},{"lastTimeCrawled":"2024-01-06T12:15:43.397305100","images":[{"src":"https://id.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://id.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg","alt":"Wikipedia"},{"src":"https://id.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-id.svg","alt":"Ensiklopedia Bebas"},{"src":"https://id.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://id.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://id.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Struktur data - Wikipedia bahasa Indonesia, ensiklopedia bebas","rating":0,"pageId":"185872bd-317c-4e01-b6e4-db5e60f4f41c","pageName":"wikipedia.org","url":"https://id.wikipedia.org/wiki/Struktur_data","content":["Dalam istilah ilmu komputer, struktur data adalah cara menyimpan dan mengatur data secara terstruktur pada sistem komputer atau pangkalan data (database) sehingga lebih mudah diakses. Secara teknis, data dalam bentuk angka, huruf, simbol, dan lainnya ini diletakkan dalam kolom-kolom dan susunan tertentu. Contoh struktur data dapat dilihat pada berkas-berkas lembar sebar (spreadsheet), pangkalan data, pengolah kata, citra yang dipampat (compressed image), dan pemampatan berkas dengan teknik tertentu yang memanfaatkan struktur data.","Dalam teknik pemrograman, struktur data berarti tata letak data yang berisi kolom-kolom data, baik itu kolom yang tampak oleh pengguna ataupun kolom yang hanya digunakan untuk keperluan pemrograman yang tidak tampak oleh pengguna. Setiap baris dari kumpulan kolom-kolom tersebut dinamakan catatan (record). Lebar kolom untuk data dapat berubah dan bervariasi. Ada kolom yang lebarnya berubah secara dinamis sesuai masukan dari pengguna, dan juga ada kolom yang lebarnya tetap. Dengan sifatnya ini, sebuah struktur data dapat diterapkan untuk pengolahan basis data (misalnya untuk keperluan data keuangan) atau untuk pengolah kata yang kolomnya berubah secara dinamis.","Struktur data adalah basis dari tipe data abstrak. Tipe data abstrak mendefinisikan bentuk logis dari sebuah tipe data, sementara struktur data mengimplementasikan bentuk fisik dari tipe data tersebut.[1]","Masing-masing jenis struktur data yang berbeda cocok untuk penggunaan-penggunaan yang berbeda, dan beberapa jenis memang dispesialisakian untuk tugas tertentu. Contohnya, basis data relasional biasanya menggunakan indeks B-tree untuk data retrieval,[2] sedangkan implementasi kompilator biasanya menggunakan tabel hash untuk menemukan pengidentifikasi.[3]","Struktur data memberikan cara mengelola data yang banyak secara efisien untuk berbagai penggunaan, misalnya untuk basis data yang besar dan layanan pengindeksan internet. Biasanya, struktur data yang efisien adalah kunci untuk mendesain algoritme yang efisien. Beberapa metode desain formal dan bahasa pemrograman menekankan struktur data, bukan pada algoritme, sebagai faktor kunci dalam mengatur desain perangkat lunak. Struktur data bisa digunakan untuk mengatur penyimpanan dan pengambilan informasi yang disimpan baik di dalam memori utama maupun memori sekunder.[4]","Ada banyak jenis struktur data, yang biasanya dibuat dari tipe data primitif yang lebih sederhana:[5]","Data struktur lainnya yang umum digunakan, diantaranya adalah tumpukan (bahasa Inggris: stack), antrean (bahasa Inggris: queue), dan pohon (bahasa Inggris: tree)."]},{"lastTimeCrawled":"2024-01-06T12:15:43.998105","images":[{"src":"https://ia.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://ia.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg","alt":"Wikipedia"},{"src":"https://ia.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-ia.svg","alt":"Le encyclopedia libere"},{"src":"https://ia.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://ia.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://ia.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Structura de datos - Wikipedia, le encyclopedia libere","rating":0,"pageId":"e2ca0296-37d4-466b-9c98-9c86dc04cca0","pageName":"wikipedia.org","url":"https://ia.wikipedia.org/wiki/Structura_de_datos","content":["In informatica, un structura de datos es un maniera particular de organisar datos in un computator a fin que illo pote esser usate efficacemente. Generes differente de structuras de datos conveni pro generes differente de applicationes e alcun es multo specialisate pro labores specific. Structuras de datos defini le operationes possibile a facer super le datos e le complexitate algorithmic de iste operationes."]},{"lastTimeCrawled":"2024-01-06T12:15:45.039623","images":[{"src":"https://is.wikipedia.org/static/images/icons/wikipedia.png","alt":""},{"src":"https://is.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg","alt":"Wikipedia"},{"src":"https://is.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-is.svg","alt":"Frjálsa alfræðiritið"},{"src":"https://is.wikipedia.org/static/images/footer/wikimedia-button.png","alt":"Wikimedia Foundation"},{"src":"https://is.wikipedia.org/static/images/footer/poweredby_mediawiki_88x31.png","alt":"Powered by MediaWiki"}],"favicon":"https://is.wikipedia.org/static/favicon/wikipedia.ico","pageTitle":"Gagnagrind - Wikipedia, frjálsa alfræðiritið","rating":0,"pageId":"989dab81-0696-4f26-ae11-73ae8e69ed22","pageName":"wikipedia.org","url":"https://is.wikipedia.org/wiki/Gagnagrind","content":["Gagnagrind[1] eða gagnaskipan[1] (e. data structure) er, í tölvunarfræði, aðferð til þess að geyma gögn í tölvu þannig að hægt sé að nálgast þau á skilvirkan hátt. Oft getur vel valin gagnagrind gert það að verkum að hægt sé að nota mjög hraðvirk reiknirit sem henta verkefninu sem er fyrir hendi. Valið á gagnagrind hefst jafnan á vali á almennri gagnagrind, svo sem fylki, lista, hlaða eða hrúgu. Gagnagrindur eru útfærðar með þeim grunntýpum, tilvísunum og aðgerðum sem forritunarmálið býður upp á.","Mismunandi gerðir gagnagrinda eru nytsamleg við lausnir á mismunandi vandamálum. Þannig eru B-tré sérlega hentug í gagnagrunnum, meðan FIFO eru hentugri í einföldum einátta boðskiptum."]}]